CREATE SEQUENCE "WRKCRD"."CC_WRKCRD_LOG_SEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE ;

CREATE TABLE "WRKCRD"."CC_WRKCRD_LOG"
  (
    "ID"     NUMBER NOT NULL ENABLE,
    "ENTITY" VARCHAR2(50 BYTE) NOT NULL ENABLE,
    "EVENT"  VARCHAR2(100 BYTE) NOT NULL ENABLE,
    "WHEN" DATE NOT NULL ENABLE,
    "WHO" VARCHAR2(30 BYTE) NOT NULL ENABLE,
    "MESSAGE" CLOB,
    "SUMMARY" VARCHAR2(100 BYTE) NOT NULL ENABLE
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "CC_DEVELOPMENT" LOB
  (
    "MESSAGE"
  )
  STORE AS BASICFILE
  (
    TABLESPACE "CC_DEVELOPMENT" ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10 NOCACHE LOGGING STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  ) ;
CREATE OR REPLACE TRIGGER "WRKCRD"."CC_WRKCRD_LOG_ID_TRIGGER" BEFORE
  INSERT ON CC_WRKCRD_LOG REFERENCING NEW AS NEW FOR EACH ROW BEGIN
  SELECT CC_WRKCRD_LOG_SEQUENCE.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER "WRKCRD"."CC_WRKCRD_LOG_ID_TRIGGER" ENABLE;
/